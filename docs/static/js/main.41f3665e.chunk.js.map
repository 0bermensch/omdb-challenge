{"version":3,"sources":["components/Header.js","store/Reducer.js","store/GlobalState.js","components/SearchMovieCard.js","components/Searchpage.js","components/Controller.js","components/NominatedMovieCards.js","components/Nominated.js","App.js","serviceWorker.js","index.js"],"names":["Header","style","backgroundColor","className","display","flexDirection","justifyContent","padding","alignItems","to","margin","listStyle","state","action","type","nominatelist","payload","filter","info","imdbID","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","Reducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToNominatelist","removeMovieFromNominatelist","children","SearchMovieCard","useContext","nominatelistDisabled","find","o","marginBottom","Poster","src","alt","Title","width","height","borderRadius","marginRight","color","fontSize","fontWeight","Year","disabled","onClick","textTransform","border","transition","lineHeight","Searchpage","useState","query","setQuery","results","setResults","maxWidth","placeholder","onChange","e","target","axios","get","then","res","data","Search","map","opacity","length","marginTop","key","Controller","NominatedMovieCards","paddingLeft","overflow","position","Nominated","textAlign","marginLeft","gridTemplateColumns","gridGap","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.41f3665e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header\r\n      style={{\r\n        backgroundColor: \"#032541\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          padding: \"0 20rem\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"inner-content\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            padding: \"10px 0\",\r\n          }}\r\n        >\r\n          <Link to=\"/\">Find your Movie</Link>\r\n        </div>\r\n        <div\r\n          className=\"nav-links\"\r\n          style={{\r\n            padding: \"0\",\r\n            margin: \"0\",\r\n            listStyle: \"none\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Link to=\"/nominated\">Nominated</Link>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_MOVIE_TO_NOMINATELIST\":\r\n      return {\r\n        ...state,\r\n        nominatelist: [action.payload, ...state.nominatelist],\r\n      };\r\n    case \"REMOVE_MOVIE_FROM_NOMINATELIST\":\r\n      return {\r\n        ...state,\r\n        nominatelist: state.nominatelist.filter(\r\n          (info) => info.imdbID !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport Reducer from \"./Reducer\";\r\n\r\nconst initialState = {\r\n  nominatelist: localStorage.getItem(\"nominatelist\")\r\n    ? JSON.parse(localStorage.getItem(\"nominatelist\"))\r\n    : [],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = (props) => {\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"nominatelist\", JSON.stringify(state.nominatelist), [\r\n      state,\r\n    ]);\r\n  });\r\n\r\n  const addMovieToNominatelist = (info) => {\r\n    dispatch({ type: \"ADD_MOVIE_TO_NOMINATELIST\", payload: info });\r\n  };\r\n\r\n  const removeMovieFromNominatelist = (imdbID) => {\r\n    dispatch({ type: \"REMOVE_MOVIE_FROM_NOMINATELIST\", payload: imdbID });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        nominatelist: state.nominatelist,\r\n        addMovieToNominatelist,\r\n        removeMovieFromNominatelist,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../store/GlobalState\";\r\n\r\nexport const SearchMovieCard = ({ info }) => {\r\n  const { addMovieToNominatelist, nominatelist } = useContext(GlobalContext);\r\n\r\n  const storedMovie = nominatelist.find((o) => o.imdbID === info.imdbID);\r\n\r\n  const nominatelistDisabled = storedMovie ? true : false;\r\n  return (\r\n    <div\r\n      className=\"result-card\"\r\n      style={{\r\n        display: \"flex\",\r\n        marginBottom: \"20px\",\r\n      }}\r\n    >\r\n      <div className=\"poster-wrapper\">\r\n        {info.Poster ? (\r\n          <img\r\n            src={info.Poster}\r\n            alt={info.Title}\r\n            style={{\r\n              width: \"75px\",\r\n              height: \"110px\",\r\n              backgroundColor: \"white\",\r\n              borderRadius: \"5px\",\r\n              marginRight: \"15px\",\r\n              display: \"block\",\r\n              color: \"transparent\",\r\n            }}\r\n          />\r\n        ) : (\r\n          <div\r\n            className=\"filter-poster\"\r\n            style={{\r\n              width: \"75px\",\r\n              height: \"110px\",\r\n              backgroundColor: \"white\",\r\n              borderRadius: \"5px\",\r\n              marginRight: \"15px\",\r\n              display: \"block\",\r\n              color: \"transparent\",\r\n            }}\r\n          ></div>\r\n        )}\r\n      </div>\r\n      <div\r\n        className=\"info\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div className=\"header\">\r\n          <h3\r\n            className=\"title\"\r\n            style={{\r\n              fontSize: \"1.25rem\",\r\n              color: \"#032541\",\r\n              fontWeight: \"600\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            {info.Title}\r\n          </h3>\r\n          <h4\r\n            className=\"release-date\"\r\n            style={{\r\n              fontSize: \"1.25rem\",\r\n              fontWeight: \"300\",\r\n              color: \"#032541\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            {info.Year ? info.Year : \"Cannot Find Release Year\"}\r\n          </h4>\r\n        </div>\r\n        <div className=\"controls\">\r\n          <button\r\n            className=\"btn\"\r\n            disabled={nominatelistDisabled}\r\n            onClick={() => addMovieToNominatelist(info)}\r\n            style={{\r\n              padding: \"10px 15px\",\r\n              backgroundColor: \"green\",\r\n              color: \"#032541\",\r\n              borderRadius: \"5px\",\r\n              textTransform: \"uppercase\",\r\n              fontWeight: \"700\",\r\n              display: \"inline-block\",\r\n              border: \"none\",\r\n              fontSize: \"1rem\",\r\n              transition: \"all 0.3s ease\",\r\n              lineHeight: \"1.1\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            Nominate Movie\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { SearchMovieCard } from \"./SearchMovieCard\";\r\n\r\nexport const Searchpage = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  const API_KEY = \"6c9fb82e\";\r\n\r\n  const movieTitle = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const movie = () => {\r\n    axios\r\n      .get(`http://www.omdbapi.com/?apikey=${API_KEY}&type=movie&s=${query}`)\r\n      .then((res) => {\r\n        setResults(res.data.Search.map((info) => info));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-page\">\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"add-content\"\r\n          style={{\r\n            padding: \"50px 0\",\r\n            maxWidth: \"600px\",\r\n            margin: \"0 auto\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"input-wrapper\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search for movies\"\r\n              onChange={movieTitle}\r\n              value={query}\r\n              style={{\r\n                width: \"100%\",\r\n                backgroundColor: \"#032541\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                fontSize: \"1.25rem\",\r\n              }}\r\n            />\r\n            <button\r\n              onClick={movie}\r\n              style={{\r\n                width: \"90px\",\r\n                height: \"50px\",\r\n                borderRadius: \"5px\",\r\n                backgroundColor: \"#032541\",\r\n                color: \"white\",\r\n                fontSize: \"1rem\",\r\n                \"&:hover\": { opacity: \"1\" },\r\n              }}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n\r\n          {results.length > 0 && (\r\n            <ul\r\n              className=\"results\"\r\n              style={{\r\n                padding: \"0\",\r\n                margin: \"0\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              {results.map((info) => (\r\n                <li\r\n                  key={info.imdbID}\r\n                  style={{\r\n                    listStyle: \"none\",\r\n                  }}\r\n                >\r\n                  <SearchMovieCard info={info} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../store/GlobalState\";\r\n\r\nexport const Controller = ({ info, type }) => {\r\n  const { removeMovieFromNominatelist } = useContext(GlobalContext);\r\n  return (\r\n    <div\r\n      className=\"inner-card-controls\"\r\n    >\r\n      {type === \"nominatelist\" && (\r\n        <>\r\n          <button\r\n            className=\"ctrl-btn\"\r\n          >\r\n            <i\r\n              className=\"fa-fw fa fa-times\"\r\n              onClick={() => removeMovieFromNominatelist(info.imdbID)}\r\n            ></i>\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Controller } from \"./Controller\";\r\n\r\nexport const NominatedMovieCards = ({ info, type }) => {\r\n  return (\r\n    <div\r\n      className=\"movie-card\"\r\n      style={{\r\n        width: \"100%\",\r\n        paddingLeft: \"10%\",\r\n        height: \"30rem\",\r\n        borderRadius: \"5px\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n        border: \"0\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      {info.Poster ? (\r\n        <img\r\n          src={info.Poster}\r\n          alt={info.Title}\r\n          style={{\r\n            width: \"80%\",\r\n            display: \"block\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"filter-poster\"\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"block\",\r\n          }}\r\n        ></div>\r\n      )}\r\n      <div\r\n        className=\"info\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div className=\"header\">\r\n          <h3\r\n            className=\"title\"\r\n            style={{\r\n              fontSize: \"1.25rem\",\r\n              color: \"#032541\",\r\n              fontWeight: \"600\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            {info.Title}\r\n          </h3>\r\n          <h4\r\n            className=\"release-date\"\r\n            style={{\r\n              fontSize: \"1.25rem\",\r\n              fontWeight: \"300\",\r\n              color: \"#032541\",\r\n              margin: \"0\",\r\n            }}\r\n          >\r\n            {info.Year ? info.Year : \"Cannot Find Release Year\"}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <Controller type={type} info={info} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../store/GlobalState\";\r\nimport { NominatedMovieCards } from \"./NominatedMovieCards\";\r\n\r\nexport const Nominated = () => {\r\n  const { nominatelist } = useContext(GlobalContext);\r\n  return (\r\n    <div\r\n      className=\"nominate-page\"\r\n      style={{\r\n        padding: \"30px 0\",\r\n      }}\r\n    >\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"header\"\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"30px\",\r\n          }}\r\n        >\r\n          <h1 className=\"heading\">Nominated List</h1>\r\n          {nominatelist.length === 5 ? (\r\n            <h1\r\n              className=\"fivemovies\"\r\n              style={{\r\n                position: \"fixed\",\r\n                textAlign: \"center\",\r\n                marginLeft: \"20rem\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              You Have Nominated Five Movies!!!\r\n            </h1>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n        {nominatelist.length > 0 ? (\r\n          <div\r\n            className=\"movie-grid\"\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(3, 1fr)\",\r\n              gridGap: \"30px\",\r\n            }}\r\n          >\r\n            {nominatelist.map((info) => (\r\n              <NominatedMovieCards info={info} type=\"nominatelist\" />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"no-movie\">No Movies Nominated</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Searchpage } from \"./components/Searchpage\";\nimport { Nominated } from \"./components/Nominated\";\nimport \"./App.css\";\nimport \"./lib/font-awesome/css/all.min.css\";\nimport { GlobalProvider } from \"./store/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Searchpage />\n          </Route>\n          <Route path=\"/nominated\">\n            <Nominated></Nominated>\n          </Route>\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}